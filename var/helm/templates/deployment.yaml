apiVersion: apps/v1
kind: Deployment
metadata:
  name: mpafastapi
  labels:
    app.kubernetes.io/name: mpafastapi
    {{ include "common.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.pod.replicas | int }}
  selector:
    matchLabels:
      {{ include "common.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{ include "common.labels" . | nindent 8 }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/scheme: http
        prometheus.io/port: "8000"
        prometheus.io/path: /metrics
    spec:
      serviceAccountName: {{ .Values.sa.name }}
      volumes:
      - name: config-volume
        secret:
          secretName: config-mpafastapi
      - name: data-volume
        emptyDir:
          sizeLimit: 10Mi
          medium: Memory
      containers:
        - name: mpafastapi
          image: {{ .Values.pod.repository }}:{{ .Chart.AppVersion }}
          imagePullPolicy: {{ .Values.pod.imagePullPolicy }}
          env:
          - name: APP_CONFIG
            value: /config/app_config.json
          - name: OTEL_SERVICE_NAME
            value: "{{ .Release.Namespace }}.mpafastapi"
          - name: OTEL_TRACES_EXPORTER
            value: "otlp"
          - name: OTEL_METRICS_EXPORTER
            value: "none"
          - name: OTEL_LOGS_EXPORTER
            value: "none"
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: "jaeger-collector.jaeger.svc.cluster.local:4317"
          - name: OTEL_EXPORTER_OTLP_INSECURE
            value: "true"
          - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
            value: "jaeger-collector.jaeger.svc.cluster.local:4317"
          - name: OTEL_EXPORTER_OTLP_TRACES_INSECURE
            value: "true"
          ports:
          - name: http
            containerPort: {{ .Values.pod.port }}
            protocol: TCP
          volumeMounts:
          - name: config-volume
            mountPath: /config
            readOnly: true
          - name: data-volume
            mountPath: /data
          securityContext:
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          livenessProbe:
            periodSeconds: 10
            httpGet:
              path: /api/healthz/liveness/
              port: {{ .Values.pod.port }}
              scheme: HTTP
          readinessProbe:
            periodSeconds: 10
            httpGet:
              path: /api/healthz/readiness/
              port: {{ .Values.pod.port }}
              scheme: HTTP
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - {{ .Values.pod.name }}
